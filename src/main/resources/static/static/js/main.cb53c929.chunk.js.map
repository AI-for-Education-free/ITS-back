{"version":3,"sources":["config/certification-settings.ts","config/i18n/all-langs.ts","components/Message/index.tsx","utils/check.ts","utils/ajax/index.ts","utils/ajax/student.ts","pages/Login.tsx","pages/SignUp.tsx","utils/ajax/exercise.ts","pages/Exercise/answerArea/Program.tsx","pages/Exercise/components/TextDisplay.tsx","pages/Exercise/components/TimeDisplay.tsx","pages/Exercise/components/CodeDisplay.tsx","redux/reducers/global.ts","pages/Exercise/index.tsx","pages/Home.tsx","pages/JavaProgramExercise.tsx","pages/SingleChoiceExercise.tsx","pages/FillInExercise.tsx","components/helpers/Link.tsx","components/helpers/SkeletonSprite.tsx","components/helpers/skeletonStyles.ts","components/Header/components/MenuButton.tsx","components/create-language-redirect.ts","components/Header/components/NavLinks.tsx","redux/reducers/user.ts","components/Header/components/UniversalNav.tsx","components/Header/index.tsx","components/Footer/index.tsx","App.tsx","reportWebVitals.ts","redux/reducers/counter.ts","redux/reducers/index.ts","redux/store.ts","i18n/config.js","index.tsx"],"names":["SuperBlocks","__webpack_require__","d","__webpack_exports__","availableLangs","auditedCerts","i18nextCodes","langDisplayNames","langCodes","client","curriculum","espanol","RespWebDesign","JsAlgoDataStruct","FrontEndDevLibs","DataVis","BackEndDevApis","chinese","QualityAssurance","SciCompPy","DataAnalysisPy","InfoSec","MachineLearningPy","chinese-traditional","italian","CodingInterviewPrep","portuguese","RelationalDb","ukrainian","japanese","english","cssStyleTable","error","color","border","success","info","Message","_ref","type","msg","React","createElement","style","className","displayName","checkPassword","password","test","checkEmail","email","axiosInstance","axios","create","baseURL","interceptors","request","use","config","Promise","reject","response","Error","Login","t","useTranslation","navigate","useNavigate","account","setAccount","createRef","useState","setPassword","prompt","setPrompt","focusOnAccount","setFocusOnAccount","usedEmailsStr","localStorage","getItem","clickOutAccountEventListener","event","handleClickOutside","target","id","useEffect","document","addEventListener","removeEventListener","noValidate","placeholder","value","onChange","e","onFocus","display","JSON","parse","map","emailItem","key","onClick","method","url","data","responseType","login","then","flag","setItem","token","setTimeout","Link","to","SignUp","name","setName","setAccountl","headers","Content-Type","register","usedEmails","emailExists","i","length","push","stringify","requierJavaProgramExerciseOneById","exerciseId","stateFields","history","historyField","ProgramAnswerArea","initCode","pathNameList","useLocation","pathname","split","serializedState","codeValue","setCodeValue","checkResult","setCheckResult","correct","CodeMirror","autoFocus","initialState","json","fields","undefined","height","extensions","java","autocompletion","activateOnTyping","selectOnOpen","defaultKeymap","viewUpdate","state","toJSON","basicSetup","highlightActiveLine","extraKeys","Tab","marginTop","width","justifyContent","Button","icon","labelPosition","Icon","submitJavaProgramExerciseAnswer","submissionCode","res","result","Segment","Header","textAlign","userOutput","Boolean","hint","compileException","message","concat","runtimeException","cause","stackTrace","lineNumber","negative","Fragment","size","hints","index","console","log","marginRight","TextDisplay","panes","menuItem","render","Pane","whiteSpace","typeTable","free","min2hour","Math","floor","TimeDisplay","stateInfo","timeInfo","errorFlag","rest","today","current","thisExercise","as","attached","CodeDisplay","content","globalSlicer","createSlice","hasFooter","reducers","setFooter","action","payload","actions","globalSelector","global","Exercise","useDispatch","dispatch","setInitCode","exercise","setExercise","exerciseDescriptionContents","item","returnContent","imageName","code","Home","subjectDict","JAVA","MATH","wait_require","exerciseTyepDict","SINGLE_CHOICE_EXERCISE","JAVA_PROGRAM_EXERCISE","FILL_IN_EXERCISE","exerciseTypeTrans","routeDict","allSubjects","setAllsubjects","allExerciseTypes","setAllExerciseTypes","allExercisesBasicInfo","setAllExercisesBasicInfo","allRecommendExercises","setAllRecommendExercises","hasFetched","useRef","requireDefaultRecommendationExercise","recommendExercises","requireSubjects","subjectList","requireExerciseTypes","typeList","async","promises","exerciseType","requireExerciseBasicInfoAll","exerciseBasicInfoList","results","all","mergedResults","fetchAllData","HeaderContent","List","divided","relaxed","recommendExercise","route","itemHeaderString","itemDescriptionString","exerciseContents","ListItem","ListContent","ListHeader","ListDescription","subject","exercisesBasicInfoInThisSubject","filter","exerciseBasicInfo","TabPane","headerString","block","Item","Content","cursor","verticalAlign","tags","join","Divider","Description","exerciseContent","JavaProgramExercise","useParams","contentType","src","alt","SingleChoiceExercise","selectedValue","setSelectedValue","chatRecord","setChatRecord","currentUserInput","setCurrentUserInput","requireSingleChoiceExerciseOneById","Form","FormField","Group","options","optionContents","optionContent","optionString","Field","compact","Radio","label","checked","alignItems","submitSingleChoiceExerciseAnswer","answer","submissionChoiceAnswer","String","fromCharCode","FillInExercise","correctAnswerKeys","setCorrectAnswerKeys","currentAnswer","setCurrentAnswer","requireFillInExerciseOneById","Object","keys","correctAnswer","emptyAnswer","k","Input","parseInt","changedAnswer","k_","submitFillInExerciseAnswer","submissionFillInAnswer","children","external","sameTab","other","assign","href","rel","SkeletonSprite","dangerouslySetInnerHTML","__html","fill","stroke","x","y","MenuButton","displayMenu","innerRef","user","aria-expanded","ref","createLanguageRedirect","_window","_window2","_window2$location","_window2$location$pat","_window3","_window3$location","_window4","_window4$location","clientLocale","lang","window","location","toString","path","hostTail","host","slice","nextClient","nextLocation","protocol","radioLocation","apiLocation","envData","locales","NavLinks","fetchState","toggleDisplayMenu","pending","isDonating","username","userSlicer","user_setName","user_login","userSelector","UniversalNav","menuButtonRef","useSelector","aria-label","fontSize","marginLeft","RLink","setDisplayMenu","clickOutsideEventListener","contains","HTMLSelectElement","Footer","App","BrowserRouter","Routes","Route","element","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","CounterSlice","increment","decrement","incrementByAmount","decrementByAmount","rootReducers","combineReducers","counter","counterSlice","userSlice","globalSlice","store","configureStore","reducer","require","config_clientLocale","i18nextCode","i18n","initReactI18next","init","fallbackLng","lng","resources","[object Object]","translations","trending","intro","metaTags","links","en","ns","defaultNS","returnObjects","interpolation","escapeValue","react","useSuspense","languages","ReactDOM","createRoot","getElementById","StrictMode","Provider"],"mappings":"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","file":"static/js/main.cb53c929.chunk.js","sourcesContent":["export const certTypes = {\n  frontEnd: 'isFrontEndCert',\n  backEnd: 'isBackEndCert',\n  dataVis: 'isDataVisCert',\n  respWebDesign: 'isRespWebDesignCert',\n  frontEndDevLibs: 'isFrontEndLibsCert',\n  dataVis2018: 'is2018DataVisCert',\n  jsAlgoDataStruct: 'isJsAlgoDataStructCert',\n  apisMicroservices: 'isApisMicroservicesCert',\n  infosecQa: 'isInfosecQaCert',\n  qaV7: 'isQaCertV7',\n  infosecV7: 'isInfosecCertV7',\n  sciCompPyV7: 'isSciCompPyCertV7',\n  dataAnalysisPyV7: 'isDataAnalysisPyCertV7',\n  machineLearningPyV7: 'isMachineLearningPyCertV7',\n  fullStack: 'isFullStackCert',\n  relationalDatabaseV8: 'isRelationalDatabaseCertV8'\n};\n\nexport enum SuperBlocks {\n  RespWebDesignNew = '2022/responsive-web-design',\n  RespWebDesign = 'responsive-web-design',\n  JsAlgoDataStruct = 'javascript-algorithms-and-data-structures',\n  FrontEndDevLibs = 'front-end-development-libraries',\n  DataVis = 'data-visualization',\n  RelationalDb = 'relational-database',\n  BackEndDevApis = 'back-end-development-and-apis',\n  QualityAssurance = 'quality-assurance',\n  SciCompPy = 'scientific-computing-with-python',\n  DataAnalysisPy = 'data-analysis-with-python',\n  InfoSec = 'information-security',\n  MachineLearningPy = 'machine-learning-with-python',\n  CodingInterviewPrep = 'coding-interview-prep'\n}\n\nexport const certIds = {\n  legacyFrontEndChallengeId: '561add10cb82ac38a17513be',\n  legacyBackEndChallengeId: '660add10cb82ac38a17513be',\n  legacyDataVisId: '561add10cb82ac39a17513bc',\n  legacyInfosecQaId: '561add10cb82ac38a17213bc',\n  legacyFullStackId: '561add10cb82ac38a17213bd',\n  respWebDesignId: '561add10cb82ac38a17513bc',\n  frontEndDevLibsId: '561acd10cb82ac38a17513bc',\n  dataVis2018Id: '5a553ca864b52e1d8bceea14',\n  jsAlgoDataStructId: '561abd10cb81ac38a17513bc',\n  apisMicroservicesId: '561add10cb82ac38a17523bc',\n  qaV7Id: '5e611829481575a52dc59c0e',\n  infosecV7Id: '5e6021435ac9d0ecd8b94b00',\n  sciCompPyV7Id: '5e44431b903586ffb414c951',\n  dataAnalysisPyV7Id: '5e46fc95ac417301a38fb934',\n  machineLearningPyV7Id: '5e46fc95ac417301a38fb935',\n  relationalDatabaseV8Id: '606243f50267e718b1e755f4'\n};\n\nexport const completionHours = {\n  [certTypes.frontEnd]: 400,\n  [certTypes.backEnd]: 400,\n  [certTypes.dataVis]: 400,\n  [certTypes.infosecQa]: 300,\n  [certTypes.fullStack]: 1800,\n  [certTypes.respWebDesign]: 300,\n  [certTypes.frontEndDevLibs]: 300,\n  [certTypes.jsAlgoDataStruct]: 300,\n  [certTypes.dataVis2018]: 300,\n  [certTypes.apisMicroservices]: 300,\n  [certTypes.qaV7]: 300,\n  [certTypes.infosecV7]: 300,\n  [certTypes.sciCompPyV7]: 300,\n  [certTypes.dataAnalysisPyV7]: 300,\n  [certTypes.machineLearningPyV7]: 300,\n  [certTypes.relationalDatabaseV8]: 300\n};\n\nexport const certSlugTypeMap = {\n  // legacy\n  'legacy-front-end': certTypes.frontEnd,\n  'legacy-back-end': certTypes.backEnd,\n  'legacy-data-visualization': certTypes.dataVis,\n  // Keep these slugs the same so we don't\n  // break existing links\n  'information-security-and-quality-assurance': certTypes.infosecQa,\n  'full-stack': certTypes.fullStack,\n\n  // modern\n  [SuperBlocks.RespWebDesign]: certTypes.respWebDesign,\n  [SuperBlocks.JsAlgoDataStruct]: certTypes.jsAlgoDataStruct,\n  [SuperBlocks.FrontEndDevLibs]: certTypes.frontEndDevLibs,\n  [SuperBlocks.DataVis]: certTypes.dataVis2018,\n  [SuperBlocks.BackEndDevApis]: certTypes.apisMicroservices,\n  'quality-assurance-v7': certTypes.qaV7,\n  'information-security-v7': certTypes.infosecV7,\n  'scientific-computing-with-python-v7': certTypes.sciCompPyV7,\n  'data-analysis-with-python-v7': certTypes.dataAnalysisPyV7,\n  'machine-learning-with-python-v7': certTypes.machineLearningPyV7,\n  'relational-database-v8': certTypes.relationalDatabaseV8\n};\n\nexport const superBlockCertTypeMap = {\n  // legacy\n  'legacy-front-end': certTypes.frontEnd,\n  'legacy-back-end': certTypes.backEnd,\n  'legacy-data-visualization': certTypes.dataVis,\n  'information-security-and-quality-assurance': certTypes.infosecQa,\n  'full-stack': certTypes.fullStack,\n\n  // modern\n  [SuperBlocks.RespWebDesign]: certTypes.respWebDesign,\n  [SuperBlocks.JsAlgoDataStruct]: certTypes.jsAlgoDataStruct,\n  [SuperBlocks.FrontEndDevLibs]: certTypes.frontEndDevLibs,\n  [SuperBlocks.DataVis]: certTypes.dataVis2018,\n  [SuperBlocks.BackEndDevApis]: certTypes.apisMicroservices,\n  [SuperBlocks.QualityAssurance]: certTypes.qaV7,\n  [SuperBlocks.InfoSec]: certTypes.infosecV7,\n  [SuperBlocks.SciCompPy]: certTypes.sciCompPyV7,\n  [SuperBlocks.DataAnalysisPy]: certTypes.dataAnalysisPyV7,\n  [SuperBlocks.MachineLearningPy]: certTypes.machineLearningPyV7,\n  [SuperBlocks.RelationalDb]: certTypes.relationalDatabaseV8,\n\n  // post-modern\n  // TODO: use enum\n  '2022/responsive-web-design': certTypes.respWebDesign\n};\n\nexport const certTypeIdMap = {\n  [certTypes.frontEnd]: certIds.legacyFrontEndChallengeId,\n  [certTypes.backEnd]: certIds.legacyBackEndChallengeId,\n  [certTypes.dataVis]: certIds.legacyDataVisId,\n  [certTypes.infosecQa]: certIds.legacyInfosecQaId,\n  [certTypes.fullStack]: certIds.legacyFullStackId,\n  [certTypes.respWebDesign]: certIds.respWebDesignId,\n  [certTypes.frontEndDevLibs]: certIds.frontEndDevLibsId,\n  [certTypes.jsAlgoDataStruct]: certIds.jsAlgoDataStructId,\n  [certTypes.dataVis2018]: certIds.dataVis2018Id,\n  [certTypes.apisMicroservices]: certIds.apisMicroservicesId,\n  [certTypes.qaV7]: certIds.qaV7Id,\n  [certTypes.infosecV7]: certIds.infosecV7Id,\n  [certTypes.sciCompPyV7]: certIds.sciCompPyV7Id,\n  [certTypes.dataAnalysisPyV7]: certIds.dataAnalysisPyV7Id,\n  [certTypes.machineLearningPyV7]: certIds.machineLearningPyV7Id,\n  [certTypes.relationalDatabaseV8]: certIds.relationalDatabaseV8Id\n};\n\nexport const certTypeTitleMap = {\n  [certTypes.frontEnd]: 'Legacy Front End',\n  [certTypes.backEnd]: 'Legacy Back End',\n  [certTypes.dataVis]: 'Legacy Data Visualization',\n  [certTypes.infosecQa]: 'Legacy Information Security and Quality Assurance',\n  [certTypes.fullStack]: 'Legacy Full Stack',\n  [certTypes.respWebDesign]: 'Responsive Web Design',\n  [certTypes.frontEndDevLibs]: 'Front End Development Libraries',\n  [certTypes.jsAlgoDataStruct]: 'JavaScript Algorithms and Data Structures',\n  [certTypes.dataVis2018]: 'Data Visualization',\n  [certTypes.apisMicroservices]: 'Back End Development and APIs',\n  [certTypes.qaV7]: 'Quality Assurance',\n  [certTypes.infosecV7]: 'Information Security',\n  [certTypes.sciCompPyV7]: 'Scientific Computing with Python',\n  [certTypes.dataAnalysisPyV7]: 'Data Analysis with Python',\n  [certTypes.machineLearningPyV7]: 'Machine Learning with Python',\n  [certTypes.relationalDatabaseV8]: 'Relational Database'\n};\n\nexport const oldDataVizId = '561add10cb82ac38a17513b3';\n","// ---------------------------------------------------------------------------\nimport { SuperBlocks } from '../certification-settings';\n/*\n * List of languages with localizations enabled for builds.\n *\n * Client is the UI, and Curriculum is the Challenge Content.\n *\n * An error will be thrown if the CLIENT_LOCALE and CURRICULUM_LOCALE variables\n * from the .env file aren't found in their respective arrays below\n */\nexport const availableLangs = {\n  client: [\n    'english',\n    'espanol',\n    'chinese',\n    'chinese-traditional',\n    'italian',\n    'portuguese',\n    'ukrainian',\n    'japanese'\n  ],\n  curriculum: [\n    'english',\n    'espanol',\n    'chinese',\n    'chinese-traditional',\n    'italian',\n    'portuguese',\n    'ukrainian',\n    'japanese'\n  ]\n};\n\n/*\n * List of certifications with localization enabled in their world language.\n *\n * These certifications have been approved 100% on Crowdin at least during\n * their launch, and hence meet the QA standard to be published live. Other\n * certifications which have not been audited & approved will fallback to\n * English equivalent.\n */\nexport const auditedCerts = {\n  espanol: [\n    SuperBlocks.RespWebDesign,\n    SuperBlocks.JsAlgoDataStruct,\n    SuperBlocks.FrontEndDevLibs,\n    SuperBlocks.DataVis,\n    SuperBlocks.BackEndDevApis\n  ],\n  chinese: [\n    SuperBlocks.RespWebDesign,\n    SuperBlocks.JsAlgoDataStruct,\n    SuperBlocks.FrontEndDevLibs,\n    SuperBlocks.DataVis,\n    SuperBlocks.BackEndDevApis,\n    SuperBlocks.QualityAssurance,\n    SuperBlocks.SciCompPy,\n    SuperBlocks.DataAnalysisPy,\n    SuperBlocks.InfoSec,\n    SuperBlocks.MachineLearningPy\n  ],\n  'chinese-traditional': [\n    SuperBlocks.RespWebDesign,\n    SuperBlocks.JsAlgoDataStruct,\n    SuperBlocks.FrontEndDevLibs,\n    SuperBlocks.DataVis,\n    SuperBlocks.BackEndDevApis,\n    SuperBlocks.QualityAssurance,\n    SuperBlocks.SciCompPy,\n    SuperBlocks.DataAnalysisPy,\n    SuperBlocks.InfoSec,\n    SuperBlocks.MachineLearningPy\n  ],\n  italian: [\n    SuperBlocks.RespWebDesign,\n    SuperBlocks.JsAlgoDataStruct,\n    SuperBlocks.FrontEndDevLibs,\n    SuperBlocks.DataVis,\n    SuperBlocks.BackEndDevApis,\n    SuperBlocks.QualityAssurance,\n    SuperBlocks.SciCompPy,\n    SuperBlocks.DataAnalysisPy,\n    SuperBlocks.InfoSec,\n    SuperBlocks.MachineLearningPy,\n    SuperBlocks.CodingInterviewPrep\n  ],\n  portuguese: [\n    SuperBlocks.RespWebDesign,\n    SuperBlocks.JsAlgoDataStruct,\n    SuperBlocks.FrontEndDevLibs,\n    SuperBlocks.DataVis,\n    SuperBlocks.BackEndDevApis,\n    SuperBlocks.QualityAssurance,\n    SuperBlocks.SciCompPy,\n    SuperBlocks.DataAnalysisPy,\n    SuperBlocks.InfoSec,\n    SuperBlocks.MachineLearningPy,\n    SuperBlocks.CodingInterviewPrep,\n    SuperBlocks.RelationalDb\n  ],\n  ukrainian: [\n    SuperBlocks.RespWebDesign,\n    SuperBlocks.JsAlgoDataStruct,\n    SuperBlocks.FrontEndDevLibs,\n    SuperBlocks.DataVis,\n    SuperBlocks.BackEndDevApis,\n    SuperBlocks.QualityAssurance,\n    SuperBlocks.SciCompPy,\n    SuperBlocks.DataAnalysisPy,\n    SuperBlocks.InfoSec,\n    SuperBlocks.MachineLearningPy,\n    SuperBlocks.CodingInterviewPrep,\n    SuperBlocks.RelationalDb\n  ],\n  japanese: [\n    SuperBlocks.RespWebDesign,\n    SuperBlocks.JsAlgoDataStruct,\n    SuperBlocks.FrontEndDevLibs,\n    SuperBlocks.DataVis,\n    SuperBlocks.BackEndDevApis,\n    SuperBlocks.QualityAssurance,\n    SuperBlocks.SciCompPy,\n    SuperBlocks.DataAnalysisPy,\n    SuperBlocks.InfoSec,\n    SuperBlocks.MachineLearningPy,\n    SuperBlocks.CodingInterviewPrep,\n    SuperBlocks.RelationalDb\n  ]\n};\n\n// ---------------------------------------------------------------------------\n\n// Each client language needs an entry in the rest of the variables below\n\n/* These strings set the i18next language. It needs to be the two character\n * string for the language to take advantage of available functionality.\n * Use a 639-1 code here https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\n */\nexport const i18nextCodes = {\n  english: 'en',\n  espanol: 'es',\n  chinese: 'zh',\n  'chinese-traditional': 'zh-Hant',\n  italian: 'it',\n  portuguese: 'pt-BR',\n  ukrainian: 'uk',\n  japanese: 'ja'\n};\n\n// These are for the language selector dropdown menu in the footer\nexport const langDisplayNames = {\n  english: 'English',\n  espanol: 'Español',\n  chinese: '中文（简体字）',\n  'chinese-traditional': '中文（繁體字）',\n  italian: 'Italiano',\n  portuguese: 'Português',\n  ukrainian: 'Українська',\n  japanese: '日本語'\n};\n\n/* These are for formatting dates and numbers. Used with JS .toLocaleString().\n * There's an example in profile/components/Camper.js\n * List: https://github.com/unicode-cldr/cldr-dates-modern/tree/master/main\n */\nexport const langCodes = {\n  english: 'en-US',\n  espanol: 'es-419',\n  chinese: 'zh',\n  'chinese-traditional': 'zh-Hant',\n  italian: 'it',\n  portuguese: 'pt-BR',\n  ukrainian: 'uk',\n  japanese: 'ja'\n};\n","import React from \"react\";\n\nimport './Message.css';\n\nconst cssStyleTable = {\n    \"error\": {\n        \"color\": \"red\",\n        \"border\": \"1px red solid\"\n    },\n    \"success\": {\n        \"color\": \"green\",\n        \"border\": \"1px green solid\"\n    },\n    \"info\": {\n        \"color\": \"blue\",\n        \"border\": \"1px blue solid\"\n    }\n};\n\nexport interface MessageProps {\n    type: \"error\" | \"success\" | \"info\",\n    msg: string\n};\n\nconst Message = ({type, msg}: MessageProps):JSX.Element => {\n    \n    return (\n        <div style={cssStyleTable[type]} className=\"message-box\">\n            {msg}\n        </div>\n    )\n}\n\nMessage.displayName = \"Message\";\nexport default Message;","function checkName(name: string): boolean {\n  let re = /^[a-zA-z][a-zA-z ]{1,8}[a-zA-z]$/;\n  return re.test(name);\n}\n\nfunction checkPassword(password: string): boolean {\n  let re1 = /^[a-zA-Z]\\w{7,15}/;\n  let re2 = /\\d/;\n  return re1.test(password) && re2.test(password);\n}\n\nfunction checkEmail(email: string): boolean {\n  let re = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n  return re.test(email);\n}\n\n\nexport {\n  checkName,\n  checkPassword,\n  checkEmail\n};","import axios from 'axios';\n\n// 实例化一个请求器，做一些基本配置\nconst axiosInstance = axios.create({\n  baseURL: \"http://127.0.0.1:8080\",\n});\n\n// 请求拦截\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // console.log(config);\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  },\n);\n// 响应拦截\naxiosInstance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    return Promise.reject(new Error(error));\n  }\n);\n\nexport default axiosInstance;","import axiosInstance from './index';\n\n\nexport const login = (info: Record<string, any>) => {\n  return axiosInstance({\n    method: \"post\",\n    url: \"/students/login\",\n    data: info,\n    responseType: \"json\",\n  });\n};\n\nexport const register = (info: Record<string, any>) => {\n  return axiosInstance({\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: \"post\",\n    url: \"/students/register\",\n    data: info,\n    responseType: \"json\",\n  });\n};","// @ts-nocheck\n\nimport React, { useState, createRef, useEffect } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useTranslation } from 'react-i18next';\n\nimport './Login.css';\n\nimport Message from '../components/Message';\n\nimport { checkPassword, checkEmail } from '../utils/check';\nimport { login } from '../utils/ajax/student';\n\n\n\nconst Login = (): JSX.Element => {\n    const { t } = useTranslation();\n    const navigate = useNavigate();\n    const ref = createRef();\n    const [account, setAccount] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [prompt, setPrompt] = useState(\"\");\n    const [focusOnAccount, setFocusOnAccount] = useState(false);\n    let usedEmailsStr = localStorage.getItem(\"usedEmails\");\n\n    const clickOutAccountEventListener = (event) => handleClickOutside(event);\n\n\t// 当点击账户输入框以外的地方时，关闭提示\n\tconst handleClickOutside = (event: globalThis.MouseEvent): void => {\n        if (event.target.id !== \"login-account\") {\n            setFocusOnAccount(false);\n        }\n        \n\t}\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('click',  clickOutAccountEventListener);\n\t}, []);  // eslint-disable-line react-hooks/exhaustive-deps\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('click', clickOutAccountEventListener);\n\t\t}\n\t}, []);  // eslint-disable-line react-hooks/exhaustive-deps\n\n\n\n\n    return (\n        <div className='login-container'>\n            <form className='login-form prompt-position' noValidate>\n                <input id=\"login-account\" type=\"text\" placeholder={t(\"system.tip-account\")} value={account || \"\"}\n                onChange={(e) => {\n                    setAccount(e.target.value);\n                }} onFocus={() => {\n                    setFocusOnAccount(true);\n                }} />\n                {usedEmailsStr !== null &&\n                    <div className='prompt-list' style={{ \"display\": (focusOnAccount && (account === \"\")) ? \"block\" : \"none\" }}>\n                        {JSON.parse(usedEmailsStr).map((emailItem: string) => (\n                            <div className='prompt-item' key={emailItem} onClick={(e) => {\n                                setAccount(emailItem);\n                            }}>\n                                {emailItem}\n                            </div>\n                        ))}\n                    </div>}\n                <input type=\"password\" placeholder={t(\"system.password\")} onChange={(e) => {\n                    setPassword(e.target.value);\n                }} />\n                {prompt !== \"\" && <Message type={prompt === \"登入成功，跳转首页中，请稍等······\" ? \"success\" : \"error\"} msg={prompt} />}\n                <div className='button' onClick={(): void => {\n                    if (checkEmail(account) && checkPassword(password)) {\n                        login({ \"email\": account, \"password\": password })\n                            .then((response) => {\n                                const data = response.data;\n                                if (data.flag) {\n                                    setPrompt(\"登入成功，跳转首页中，请稍等······\");\n                                    localStorage.setItem(\"token\", data.data.token);\n                                    setTimeout(() => {\n                                        navigate(\"/home\");\n                                    }, 3000);\n                                } else {\n                                    setPrompt(data.msg);\n                                }\n                            });\n                    }\n                    if (!checkEmail(account)) {\n                        setPrompt(\"邮箱格式不对\")\n                    }\n                    if (!checkPassword(password)) {\n                        setPrompt(\"密码格式不对\")\n                    }\n                }}>{t('buttons.sign-in')}</div>\n                <h3 className='separator'>\n                    <span>{t('system.or')}</span>\n                </h3>\n                <Link to=\"/sign-up\" className='button'>{t('system.sign-up')}</Link>\n            </form>\n\n        </div>\n    )\n};\n\nLogin.displayName = \"Login\";\nexport default Login;","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from \"react-router-dom\";\n\n\nimport Message from '../components/Message';\nimport { checkPassword, checkEmail } from '../utils/check';\nimport { register } from \"../utils/ajax/student\";\n\nconst SignUp = (): JSX.Element => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [account, setAccountl] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [prompt, setPrompt] = useState(\"\");\n\n\n  return (\n    <div className='login-container'>\n      <form className='login-form' noValidate>\n        <input type=\"text\" placeholder={t(\"system.tip-name\")} onChange={(e) => {\n          setName(e.target.value);\n        }} />\n        <input type=\"text\" placeholder={t(\"system.tip-account\")} onChange={(e) => {\n          setAccountl(e.target.value);\n        }} />\n        <input type=\"password\" placeholder={t(\"system.tip-password\")} onChange={(e) => {\n          setPassword(e.target.value);\n        }} />\n        {prompt !== \"\" && <Message type={prompt === \"注册成功，跳转登入界面中，请稍等······\" ? \"success\" : \"error\"} msg={prompt} />}\n        <div className='button' onClick={(): void => {\n          if (name !== \"\" && checkEmail(account) && checkPassword(password)) {\n            register({ \"name\": name, \"email\": account, \"password\": password })\n              .then((response) => {\n                const data = response.data;\n                if (data.flag) {\n                  setPrompt(\"注册成功，跳转登入界面中，请稍等······\");\n                  // 将该邮箱缓存到浏览器\n                  let usedEmailsStr = localStorage.getItem(\"usedEmails\");\n                  if (usedEmailsStr !== null) {\n                    // 之前有缓存\n                    const usedEmails: Array<string> = JSON.parse(usedEmailsStr);\n                    // 判断该邮箱是否已经存在\n                    let emailExists: boolean = false;\n                    for (let i = 0; i < usedEmails.length; i++) {\n                      if (usedEmails[i] === account) {\n                        emailExists = true;\n                        break;\n                      }\n                    }\n                    if (!emailExists) {\n                      usedEmails.push(account);\n                      usedEmailsStr = JSON.stringify(usedEmails);\n                      localStorage.setItem(\"usedEmails\", usedEmailsStr);\n                    }\n                  } else {\n                    // 之前没缓存\n                    const usedEmails: Array<string> = [];\n                    usedEmails.push(account);\n                    usedEmailsStr = JSON.stringify(usedEmails);\n                    localStorage.setItem(\"usedEmails\", usedEmailsStr);\n                  }\n                  setTimeout(() => {\n                    navigate(\"/login\");\n                  }, 3000);\n                } else {\n                  setPrompt(data.msg);\n                }\n              });\n\n          }\n          if (name === \"\") {\n            setPrompt(\"用户名不能为空\");\n            return;\n          }\n          if (!checkEmail(account)) {\n            setPrompt(\"邮箱格式不对\");\n            return;\n          }\n          if (!checkPassword(password)) {\n            setPrompt(\"密码格式不对\");\n            return;\n          }\n        }}>{t('system.sign-up-submit')}</div>\n      </form>\n\n    </div>\n  )\n};\n\nSignUp.displayName = \"SignUp\";\nexport default SignUp;","import axiosInstance from './index';\n\nexport const requireSubjects = (token:string) => {\n  return axiosInstance({\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"token\": token\n    },\n    method: \"get\",\n    url: \"/exercises/subject\",\n    responseType: \"json\",\n  });\n};\n\nexport const requireExerciseTypes = (token:string) => {\n  return axiosInstance({\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"token\": token\n    },\n    method: \"get\",\n    url: \"/exercises/type\",\n    responseType: \"json\",\n  });\n};\n\nexport const requireDefaultRecommendationExercise = (token:string) => {\n  return axiosInstance({\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"token\": token\n    },\n    method: \"get\",\n    url: \"/recommend/default\",\n    responseType: \"json\",\n  });\n}\n\nexport const requireExerciseBasicInfoAll = (token:string, exerciseType:string) => {\n  return axiosInstance({\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"token\": token\n    },\n    method: \"get\",\n    url: \"/exercises/basicInfo/all/\" + exerciseType,\n    responseType: \"json\",\n  });\n}\n\nexport const requireJavaProgramExerciseAll = (token:string) => {\n  return axiosInstance({\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"token\": token\n    },\n    method: \"get\",\n    url: \"/exercises/javaProgram/all\",\n    responseType: \"json\",\n  });\n};\n\nexport const requierJavaProgramExerciseOneById = (token:string, exerciseId:string) => {\n  return axiosInstance({\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"token\": token\n    },\n    method: \"get\",\n    url: \"/exercises/javaProgram/one/\" + exerciseId,\n    responseType: \"json\",\n  });\n};\n\nexport const requireSingleChoiceExerciseAll = (token:string) => {\n  return axiosInstance({\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"token\": token\n    },\n    method: \"get\",\n    url: \"/exercises/singleChoice/all\",\n    responseType: \"json\",\n  });\n};\n\nexport const requireSingleChoiceExerciseOneById = (token:string, exerciseId:string) => {\n  return axiosInstance({\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"token\": token\n    },\n    method: \"get\",\n    url: \"/exercises/singleChoice/one/\" + exerciseId,\n    responseType: \"json\",\n  });\n};\n\nexport const requireFillInExerciseOneById = (token:string, exerciseId:string) => {\n  return axiosInstance({\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"token\": token\n    },\n    method: \"get\",\n    url: \"/exercises/fillIn/one/\" + exerciseId,\n    responseType: \"json\",\n  });\n};\n\n\nexport const submitJavaProgramExerciseAnswer = (token:string, exerciseId:string, info: Record<string, any>) => {\n  return axiosInstance({\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"token\": token\n    },\n    method: \"post\",\n    url: \"/exercises/java/program/check/\" + exerciseId,\n    data: info,\n    responseType: \"json\",\n  });\n};\n\nexport const submitSingleChoiceExerciseAnswer = (token:string, exerciseId:string, answer:string) => {\n  return axiosInstance({\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"token\": token\n    },\n    method: \"post\",\n    url: \"/exercises/singleChoice/check/\" + exerciseId,\n    data: {\n      \"submissionChoiceAnswer\": answer\n    },\n    responseType: \"json\",\n  });\n}\n\nexport const submitFillInExerciseAnswer = (token:string, exerciseId:string, answer:Record<string, string>) => {\n  return axiosInstance({\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"token\": token\n    },\n    method: \"post\",\n    url: \"/exercises/fillIn/check/\" + exerciseId,\n    data: {\n      \"submissionFillInAnswer\": answer\n    },\n    responseType: \"json\",\n  });\n}","// @ts-nocheck\nimport React, { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Button, Icon, Segment, Message } from \"semantic-ui-react\";\nimport CodeMirror from '@uiw/react-codemirror';\nimport { historyField } from '@codemirror/commands';\nimport { StreamLanguage } from '@codemirror/language';\nimport { java } from '@codemirror/lang-java';\nimport { xcodeLight } from '@uiw/codemirror-theme-xcode';\nimport { autocompletion } from '@codemirror/autocomplete';\n\nimport { submitJavaProgramExerciseAnswer } from '../../../utils/ajax/exercise';\n\n\nconst stateFields = { history: historyField };\n\nexport interface ProgramAnswerAreaProps {\n  initCode?: string;\n}\n\nconst ProgramAnswerArea = ({ initCode }: ProgramAnswerAreaProps): JSX.Element => {\n  let locationObject: Location = useLocation();\n  let pathName = locationObject.pathname;\n  let pathNameList: string[] = pathName.split(\"/\");\n  let exerciseId: string = pathNameList[pathNameList.length - 1];\n\n  const serializedState = localStorage.getItem('myEditorState');\n  let preCodeValue = localStorage.getItem('myValue');\n  // const [codeValue, setCodeValue] = useState(Boolean(preCodeValue) ? preCodeValue : initCode)\n  const [codeValue, setCodeValue] = useState(initCode)\n  const [checkResult, setCheckResult] = useState({ \"correct\": \"no result\" });\n  return (\n    <div className='answer-area-box'>\n      <CodeMirror\n        style={{ \"border\": \"black 1px solid\" }}\n        value={codeValue}\n        autoFocus={true}\n        initialState={serializedState\n          ? {\n            json: JSON.parse(serializedState || ''),\n            fields: stateFields,\n          }\n          : undefined}\n        height=\"500px\"\n        // theme={xcodeLight}\n        extensions={[\n          java(),\n          autocompletion({\n            activateOnTyping: true,\n            selectOnOpen: true,\n            defaultKeymap: true\n          })\n        ]}\n        onChange={(value, viewUpdate) => {\n          localStorage.setItem('myValue', value);\n          setCodeValue(value);\n          const state = viewUpdate.state.toJSON(stateFields);\n          localStorage.setItem('myEditorState', JSON.stringify(state));\n        }}\n        basicSetup={{\n          autocompletion: true,\n          // 光标代码高亮\n          highlightActiveLine: true\n        }}\n        extraKeys={{ \"Tab\": \"autocomplete\" }}\n      />\n      <div style={{\n        marginTop: \"5px\",\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"right\",\n      }}>\n        <Button\n          icon\n          labelPosition=\"left\"\n          color=\"blue\"\n          onClick={() => {\n            setCodeValue(initCode);\n          }}\n        >\n          <Icon name=\"redo\" color=\"black\" />\n          复原\n        </Button>\n        <Button\n          icon\n          labelPosition=\"right\"\n          color=\"green\"\n          onClick={() => {\n            submitJavaProgramExerciseAnswer(localStorage.getItem(\"token\"), exerciseId, { \"submissionCode\": codeValue }).then(\n              (res) => {\n                setCheckResult(res.data.data.result);\n              }\n            );\n          }}\n        >\n          <Icon name=\"arrow up\" color=\"black\" />\n          提交\n        </Button>\n      </div>\n      <Segment>\n        <Message.Header style={{ \"textAlign\": \"center\" }}>控制台输出</Message.Header>\n        <Message>\n          <pre>{checkResult.userOutput}</pre>\n          {Boolean(checkResult.hint == \"compileException\") && <pre style={{ \"color\": \"red\" }}>{\"compileException\\n\" + checkResult.compileException.message}</pre>}\n          {Boolean(checkResult.hint == \"runtimeException\") && <pre style={{ \"color\": \"red\" }}>{`runtimeException\nline: ${checkResult.runtimeException.cause.stackTrace[0].lineNumber - 1}\nmessage: ${checkResult.runtimeException.cause.message}`}</pre>}\n        </Message>\n      </Segment>\n      <Segment>\n        <Message.Header style={{ \"textAlign\": \"center\" }}>测试结果</Message.Header>\n        {checkResult.correct !== \"no result\" && <Message success={checkResult.correct} negative={!checkResult.correct}>\n          {checkResult.correct ?\n            (<><span>正确</span><Icon name=\"check circle\" color=\"green\" size=\"large\" /></>) :\n            <><span>错误</span><Icon name=\"times circle\" color=\"red\" size=\"large\" /></>}\n        </Message>}\n        {Boolean(checkResult.hints) && checkResult.hints.map((hint, index) => {\n          console.log(hint);\n          return (\n            <Message key={index} negative>\n              <p style={{ display: \"inline-block\", marginRight: \"8px\" }}>\n                {hint.chinese}\n              </p>\n              <Icon name=\"times circle\" color=\"red\"></Icon>\n            </Message>\n          );\n        })}\n      </Segment>\n    </div>\n  )\n};\n\nProgramAnswerArea.displayName = \"ProgramAnswerArea\";\nexport default ProgramAnswerArea;","import React from \"react\";\nimport { Tab } from 'semantic-ui-react';\n\nexport interface TextDisplayProps {\n    english?: string;\n    chinese?: string;\n}\n\nconst TextDisplay = ({ english, chinese }: TextDisplayProps): JSX.Element => {\n    let panes = [\n        { menuItem: 'english', render: () => <Tab.Pane>{english}</Tab.Pane> },\n        { menuItem: '中文', render: () => <Tab.Pane>{chinese}</Tab.Pane> },\n    ];\n\n    return (\n        <div className=\"display-text\">\n            <pre style={{ \"whiteSpace\": \"pre-wrap\" }}><Tab panes={panes} /></pre>\n        </div>\n    );\n}\n\nTextDisplay.displayName = \"TextDisplay\";\nexport default TextDisplay;","import React from \"react\";\nimport { Header, Message, Icon } from 'semantic-ui-react';\n\nconst typeTable:{free:string, test:string} = {\n    free: \"正在练习中\",\n    test: \"正在考试中\"\n}\n\nconst min2hour:Function = (t:number):string => {\n    let result:string;\n    if (t < 60) {\n        result = t + \"分钟\";\n    } else {\n        result = Math.floor(t / 60) + \"小时\" + (t % 60) + \"分钟\";\n    }\n    return result;\n}\n\nexport interface TimeDisplayProps {\n    type: \"free\" | \"test\",\n    stateInfo: {\n        free?: { today:number, current:number },\n        test?: { rest:number, thisExercise:number }\n    }\n}\n\nconst TimeDisplay = ({ type, stateInfo }: TimeDisplayProps): JSX.Element => {\n    const { free, test } = stateInfo;\n    let errorFlag:boolean = false;\n    if (test) {\n        errorFlag = test.rest <= 10;\n    }\n    let timeInfo;\n    switch (type) {\n        case \"free\":\n            timeInfo = \"今天总共已练习\" + min2hour(free?.today) + \"，本次练习时间已有\" + min2hour(free?.current);\n            break;\n        case \"test\":\n            timeInfo = \"本次测试剩余\" + min2hour(test?.rest) + \"分钟，该题已用时\" +  min2hour(test?.thisExercise);\n            break;\n        default:\n            timeInfo = \"\";\n    }\n\n    return (\n        <div>\n            <Header as='h2' attached=\"top\" textAlign=\"center\" color=\"blue\"> \n                {typeTable[type]}\n            </Header>\n            <Message error={errorFlag} attached='bottom'>\n                {errorFlag && <Icon name='warning' />}\n                {timeInfo}\n            </Message>\n        </div>\n    );\n};\n\nTimeDisplay.displayName = \"TimeDisplay\";\nexport default TimeDisplay;\n","import React from \"react\";\nimport ReactMarkdown from 'react-markdown';\n\nexport interface CodeDisplayProps {\n    content?: string;\n}\n\nconst CodeDisplay = ({\n    content\n}: CodeDisplayProps): JSX.Element => {\n    content = content;\n    return (\n        <pre className=\"display-code\"><code style={{\"whiteSpace\": \"pre-wrap\"}}>{content}</code></pre>\n    );\n}\n\nCodeDisplay.displayName = \"CodeDisplay\";\nexport default CodeDisplay;","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppDispatch, RootState } from \"../store\";\n\nconst globalSlicer = createSlice({\n  name: \"global\",\n  initialState: {\n    hasFooter: true\n  },\n  reducers: {\n    setFooter: (state, action) => {\n      state.hasFooter = action.payload;\n    }\n  }\n});\n\nexport const { setFooter } = globalSlicer.actions;\n\nexport const globalSelector = (state: RootState) => {\n  return {\n    \"hasFooter\": state.global.hasFooter\n  }\n};\n\nexport default globalSlicer.reducer;","// @ts-nocheck\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Tab } from 'semantic-ui-react';\n\nimport { ProgramAnswerArea } from \"./answerArea\";\n\nimport { requierJavaProgramExerciseOneById } from '../../utils/ajax/exercise';\n\nimport \"./Exercise.css\";\n\nimport { TimeDisplay, CodeDisplay, TextDisplay } from './components';\nimport ExerciseArea from './ExerciseArea';\n\n\nimport { setFooter } from '../../redux/reducers/global';\n\nexport interface ExerciseProps {\n    exercise: {\n        contents: Array<{ type: string, content: string }>,\n        hint?: Array<{ type: string, content: string }>,\n        subject: string\n    }\n}\n\nconst Exercise = (): JSX.Element => {\n    const navigate = useNavigate();\n\n    let token: string;\n    if (localStorage.getItem(\"token\") !== null) {\n        token = localStorage.getItem(\"token\") as string;\n    } else {\n        navigate(\"/home\");\n    }\n\n\n    const dispatch = useDispatch();\n    dispatch(setFooter(false));\n\n    const [initCode, setInitCode] = useState(\"\");\n    const [exercise, setExercise] = useState(null);\n\n\n    // const stuId = useSelector(state => state.id);\n    // const [activeItem, changeActive] = useState(\"练习\");\n    // const { path, url, params } = useRouteMatch();\n    // const BASIC_PATH = url;\n\n    useEffect(() => {\n        requierJavaProgramExerciseOneById(token, \"524223040\").then(\n            (res) => {\n                console.log(res);\n                console.log(res.data.data.exercise.initCode);\n                setInitCode(res.data.data.exercise.initCode);\n                setExercise(res.data.data.exercise);\n            }\n        );\n    }, [])\n\n    return (\n        <div className='exercise-page'>\n            <TimeDisplay type='free' stateInfo={{ free: { today: 100, current: 20 } }} />\n            {Boolean(exercise) ? (<div className='exercise-answer-box'>\n                <div className=\"exercise-display-box\">\n                    <div className=\"exercise-contents-box\">\n                        {exercise.exerciseDescriptionContents.map((item, index) => {\n                            let returnContent;\n                            switch (item.type) {\n                                case \"TEXT\":\n                                    returnContent = <TextDisplay key={index} english={item.english} chinese={item.chinese}/>\n                                    break;\n                                case \"IMAGE\":\n                                    returnContent = <div className=\"display-image\">{item.imageName}</div>\n                                    break;\n                                case \"VIDEO\":\n                                    returnContent = <div className=\"display-video\"></div>\n                                    break;\n                                case \"CODE\":\n                                    returnContent = <CodeDisplay key={index} content={item.code}/>\n                                    break;\n                            }\n                            return returnContent\n                        })}\n                    </div>\n                </div>\n                <ProgramAnswerArea initCode={initCode} />\n            </div>) : (<div>等待</div>)}\n\n        </div>\n    );\n}\n\nExercise.displayName = 'Exercise';\nexport default Exercise;","// @ts-nocheck\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Link, useNavigate, BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Button, Divider, Header, TabPane, Tab, List, ListItem, ListContent, ListHeader, ListDescription, HeaderContent } from \"semantic-ui-react\";\n\nimport {\n  requireSubjects,\n  requireExerciseTypes,\n  requireExerciseBasicInfoAll,\n  requireDefaultRecommendationExercise\n} from '../utils/ajax/exercise';\nimport JavaProgramExercise, { JavaProgramExerciseProps } from \"./JavaProgramExercise\";\n\nimport \"./Home.css\";\n\ninterface exerciseBasicInfoObject {\n  subjectType: string,\n  exerciseType: string,\n  exerciseId: string,\n  exerciseContent: string,\n  tags: string[],\n  concepts: string[]\n}\n\ninterface contentObject {\n  [key: string]: string;\n}\n\ninterface recommendExerciseObject {\n  exerciseType: string,\n  exerciseId: string,\n  exerciseContents: contentObject[]\n}\n\nconst Home = (): JSX.Element => {\n  const subjectDict = {\n    \"JAVA\": \"Java编程\",\n    \"MATH\": \"数学\",\n    \"wait_require\": \"请求中，请稍候...\"\n  }\n  const exerciseTyepDict = {\n    \"SINGLE_CHOICE_EXERCISE\": \"单选题\",\n    \"JAVA_PROGRAM_EXERCISE\": \"编程题\",\n    \"FILL_IN_EXERCISE\": \"填空题\",\n    \"wait_require\": \"请求中，请稍候...\"\n  };\n  const exerciseTypeTrans = {\n    \"SINGLE_CHOICE_EXERCISE\": \"singleChoice\",\n    \"JAVA_PROGRAM_EXERCISE\": \"javaProgram\",\n    \"FILL_IN_EXERCISE\": \"fillIn\",\n  }\n  const routeDict = {\n    \"SINGLE_CHOICE_EXERCISE\": \"/singleChoiceExercise/\",\n    \"JAVA_PROGRAM_EXERCISE\": \"/javaProgramExercise/\",\n    \"FILL_IN_EXERCISE\": \"/fillInExercise/\",\n  }\n\n  const navigate = useNavigate();\n  let token: string;\n  if (localStorage.getItem(\"token\") !== null) {\n    token = localStorage.getItem(\"token\") as string;\n  } else {\n    navigate(\"/login\");\n  }\n\n  const [allSubjects, setAllsubjects] = useState<string[]>([\"wait_require\"]);\n  const [allExerciseTypes, setAllExerciseTypes] = useState<string[]>([\"wait_require\"]);\n  const [allExercisesBasicInfo, setAllExercisesBasicInfo] = useState<exerciseBasicInfoObject[]>([]);\n  const [allRecommendExercises, setAllRecommendExercises] = useState<recommendExerciseObject[]>([]);\n  const hasFetched = useRef(false);\n\n  useEffect(() => {\n    if (!hasFetched.current) {\n      // 防止请求两次\n      hasFetched.current = true;\n      requireDefaultRecommendationExercise(token).then(\n        (res) => {\n          if (res.data.flag) {\n            setAllRecommendExercises(res.data.data.recommendExercises);\n          } else {\n            // console.log(res);\n          }\n        }\n      )\n    }\n  }, [])\n\n  useEffect(() => {\n    requireSubjects(token).then(\n      (res) => {\n        if (res.data.flag) {\n          setAllsubjects(res.data.data.subjectList);\n        } else {\n          // console.log(res);\n        }\n      }\n    )\n  }, [])\n\n  useEffect(() => {\n    requireExerciseTypes(token).then(\n      (res) => {\n        if (res.data.flag) {\n          setAllExerciseTypes(res.data.data.typeList);\n        } else {\n          // console.log(res);\n        }\n      }\n    );\n  }, [])\n\n  useEffect(() => {\n    const fetchAllData = async () => {\n      const promises = allExerciseTypes.map((exerciseType) => {\n        if (exerciseType !== \"wait_require\") {\n          return requireExerciseBasicInfoAll(token, exerciseTypeTrans[exerciseType])\n            .then(res => res.data.flag ? res.data.data.exerciseBasicInfoList : []);\n        }\n        return [];\n      });\n\n      try {\n        const results = await Promise.all(promises);\n        const mergedResults = [].concat(...results);\n        setAllExercisesBasicInfo(mergedResults);\n      } catch (error) {\n        console.error('Error fetching data', error);\n      }\n    };\n\n    fetchAllData();\n  }, [allExerciseTypes])\n\n  return (\n    <div className='home-page'>\n      <div className=\"default-recommendation\">\n        <Header as='h2' textAlign='center' color=\"blue\">\n          <HeaderContent>系统推荐习题</HeaderContent>\n        </Header>\n        {allRecommendExercises.length > 0 && <List divided relaxed>\n          {\n            allRecommendExercises.map((recommendExercise) => {\n              let route = routeDict[recommendExercise.exerciseType];\n              let itemHeaderString = exerciseTyepDict[recommendExercise.exerciseType];\n              let itemDescriptionString = recommendExercise.exerciseContents[0].chinese;\n              if (itemDescriptionString.length == 0) {\n                itemDescriptionString = recommendExercise.exerciseContents[0].english;\n              }\n              return (\n                <ListItem as={Link} key={recommendExercise.exerciseId} to={route + recommendExercise.exerciseId}>\n                  <ListContent>\n                    <ListHeader as='a'>{itemHeaderString}</ListHeader>\n                    <ListDescription as='a'>{itemDescriptionString}</ListDescription>\n                  </ListContent>\n                </ListItem>\n              )\n            })\n          }\n        </List>}\n      </div>\n\n      <div>\n        <Tab panes={\n          allSubjects.map((subject) => {\n            const exercisesBasicInfoInThisSubject = allExercisesBasicInfo.filter((exerciseBasicInfo) => {\n              return exerciseBasicInfo[\"subjectType\"] == subject;\n            });\n            return {\n              menuItem: subjectDict[subject],\n              render: () => (\n                <TabPane>\n                  {\n                    allExerciseTypes.map((exerciseType) => {\n                      let headerString = exerciseTyepDict[exerciseType];\n                      let route = routeDict[exerciseType];\n                      return (\n                        <div key={subject + exerciseType} className=\"exercise-list\">\n                          <Header\n                            as=\"h1\"\n                            block\n                            textAlign=\"center\"\n                            style={{ color: \"#4183c4\" }}\n                          >\n                            {headerString}\n                          </Header>\n                          <List divided relaxed>\n                            {exercisesBasicInfoInThisSubject.map((exerciseBasicInfo) => {\n                              return (\n                                (exerciseBasicInfo[\"exerciseType\"] == exerciseType) && <List.Item key={subject + exerciseType + exerciseBasicInfo.exerciseId}>\n                                  <List.Content>\n                                    <Button\n                                      as={Link}\n                                      to={route + exerciseBasicInfo.exerciseId}\n                                      style={{ cursor: \"pointer\", marginRight: \"10px\" }}\n                                      color=\"green\"\n                                    // onClick={() => {\n                                    // }}\n                                    >\n                                      开始练习\n                                    </Button>\n                                    <List.Header\n                                      as=\"h2\"\n                                      style={{\n                                        color: \"brown\",\n                                        display: \"inline-block\",\n                                        verticalAlign: \"middle\",\n                                      }}\n                                    >\n                                      {exerciseBasicInfo.tags.join(\"  |  \")}\n                                    </List.Header>\n\n                                    <Divider />\n                                    <List.Description>\n                                      {/* <span style={{ color: \"#db2828\" }}>发布时间：</span>\n                                      {new Date(test.releaseTime).toLocaleDateString() +\n                                        \" \" +\n                                        new Date(test.releaseTime).toLocaleTimeString()}\n                                      <br />\n                                      <span style={{ color: \"#db2828\" }}>描述：</span> */}\n                                      {exerciseBasicInfo.exerciseContent}\n                                    </List.Description>\n                                  </List.Content>\n                                </List.Item>\n                              );\n                            })}\n                          </List>\n                        </div>\n                      );\n                    })\n                  }\n                </TabPane>\n              )\n            }\n          })\n        } />\n      </div>\n\n    </div>\n  );\n}\n\nHome.displayName = \"Home\";\nexport default Home;","// @ts-nocheck\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Tab } from 'semantic-ui-react';\n\nimport { ProgramAnswerArea } from \"./Exercise/answerArea\";\n\nimport { requierJavaProgramExerciseOneById } from '../utils/ajax/exercise';\n\nimport \"./Exercise/Exercise.css\";\n\nimport { TimeDisplay, CodeDisplay, TextDisplay } from './Exercise/components';\nimport ExerciseArea from './Exercise/ExerciseArea';\n\n\nimport { setFooter } from '../redux/reducers/global';\n\n\nexport interface JavaProgramExerciseProps {\n    exerciseId: string\n};\n\ninterface exerciseContentObject {\n    contentType: string,\n    chinese?: string,\n    english?: string,\n    code?: string,\n    imageName?: string,\n    style?:string\n}\n\ninterface exerciseObject {\n    exerciseContents: exerciseContentObject[],\n    initCode: string\n}\n\nconst JavaProgramExercise = (): JSX.Element => {\n    const navigate = useNavigate();\n    let token: string;\n    if (localStorage.getItem(\"token\") !== null) {\n        token = localStorage.getItem(\"token\") as string;\n    } else {\n        navigate(\"/login\");\n    }\n\n    const dispatch = useDispatch();\n    dispatch(setFooter(false));\n\n    const { exerciseId } = useParams();\n\n    const [exercise, setExercise] = useState<exerciseObject | null>(null);\n\n    useEffect(() => {\n        requierJavaProgramExerciseOneById(token, exerciseId).then((res) => {\n            console.log(res.data.data.exercise);\n            setExercise(res.data.data.exercise);\n        })\n    }, []);\n\n    return (\n        <div className='exercise-page'>\n            {/* <TimeDisplay type='free' stateInfo={{ free: { today: 100, current: 20 } }} /> */}\n            {Boolean(exercise) ? (<div className='exercise-answer-box'>\n                <div className=\"exercise-display-box\">\n                    <div className=\"exercise-contents-box\">\n                        {exercise?.exercise.exerciseContents.map((exerciseContent, index) => {\n                            let returnContent;\n                            switch (exerciseContent.contentType) {\n                                case \"TEXT\":\n                                    returnContent = <TextDisplay key={index} english={exerciseContent.english} chinese={exerciseContent.chinese}/>\n                                    break;\n                                case \"IMAGE\":\n                                    returnContent = <div className=\"display-image\" key={index}>\n                                        <img src={\"/\" + exerciseContent.imageName} alt=\"requesting ...\" />\n                                    </div>\n                                    break;\n                                case \"VIDEO\":\n                                    returnContent = <div className=\"display-video\"></div>\n                                    break;\n                                case \"CODE\":\n                                    returnContent = <CodeDisplay key={index} content={exerciseContent.code}/>\n                                    break;\n                            }\n                            return returnContent\n                        })}\n                    </div>\n                </div>\n                <ProgramAnswerArea initCode={exercise?.initCode} />\n            </div>) : (<div>waiting ...</div>)}\n\n        </div>\n    );\n}\n\n\nexport default JavaProgramExercise;","// @ts-nocheck\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Radio, Form, Segment, FormField, Button, Message, Icon, TextArea, List, ListItem, ListContent, ListDescription, Divider } from 'semantic-ui-react';\n\nimport { requireSingleChoiceExerciseOneById, submitSingleChoiceExerciseAnswer } from '../utils/ajax/exercise';\n\nimport \"./Exercise/Exercise.css\";\nimport { exerciseContentObject } from './JavaProgramExercise';\n\nimport { CodeDisplay, TextDisplay } from './Exercise/components';\n\nimport { setFooter } from '../redux/reducers/global';\n\ntype optionsObject = exerciseContentObject[][];\n\ninterface exerciseObject {\n  exerciseContents: exerciseContentObject[],\n  options: optionsObject;\n}\n\n\nconst SingleChoiceExercise = (): JSX.Element => {\n  const navigate = useNavigate();\n  let token: string;\n  if (localStorage.getItem(\"token\") !== null) {\n    token = localStorage.getItem(\"token\") as string;\n  } else {\n    navigate(\"/login\");\n  }\n\n  // const dispatch = useDispatch();\n  // dispatch(setFooter(false));\n\n  const { exerciseId } = useParams();\n\n  const [exercise, setExercise] = useState<exerciseObject | null>(null);\n  const [selectedValue, setSelectedValue] = useState<int>(0);\n  const [checkResult, setCheckResult] = useState<int>(2);\n  const [chatRecord, setChatRecord] = useState<Record<string, string>[]>([]);\n  const [currentUserInput, setCurrentUserInput] = useState<string>(\"\");\n\n  useEffect(() => {\n    requireSingleChoiceExerciseOneById(token, exerciseId).then((res) => {\n      setExercise(res.data.data.exercise);\n    })\n  }, []);\n\n  return (\n    <div className='exercise-page'>\n      {Boolean(exercise) ? (<div className='exercise-answer-box'>\n        <Form>\n          <FormField>\n            <div className=\"exercise-display-box\">\n              <div className=\"exercise-contents-box\">\n                {exercise?.exercise.exerciseContents.map((exerciseContent, index) => {\n                  let returnContent;\n                  switch (exerciseContent.contentType) {\n                    case \"TEXT\":\n                      returnContent = <TextDisplay key={index} english={exerciseContent.english} chinese={exerciseContent.chinese} />\n                      break;\n                    case \"IMAGE\":\n                      returnContent = <div className=\"display-image\" key={index}>\n                        <img src={\"/\" + exerciseContent.imageName} alt=\"requesting ...\" />\n                      </div>\n                      break;\n                    case \"VIDEO\":\n                      returnContent = <div className=\"display-video\"></div>\n                      break;\n                    case \"CODE\":\n                      returnContent = <CodeDisplay key={index} content={exerciseContent.code} />\n                      break;\n                  }\n                  return returnContent\n                })}\n              </div>\n            </div>\n          </FormField>\n\n          <Form.Group>\n            {exercise.options.map((optionContents, index) => {\n              const optionContent = optionContents[0];\n              let optionString = optionContent.chinese;\n              if (optionString.length == 0) {\n                optionString = optionContent.english;\n              }\n              return (\n                <Form.Field key={index}>\n                  <Segment compact>\n                    <Radio\n                      label={optionString}\n                      name={exerciseId}\n                      value={index}\n                      checked={selectedValue === index}\n                      onChange={(e, { value }) => {\n                        setSelectedValue(value);\n                      }}\n                    />\n                  </Segment>\n                </Form.Field>\n              );\n            })}\n          </Form.Group>\n        </Form>\n\n        <div style={{\n          marginTop: \"5px\",\n          width: \"450px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}>\n          <div>\n            <Button\n              icon\n              labelPosition=\"right\"\n              color=\"green\"\n              onClick={() => {\n                submitSingleChoiceExerciseAnswer(localStorage.getItem(\"token\"), exerciseId, String.fromCharCode(65 + selectedValue)).then(\n                  (res) => {\n                    setCheckResult(res.data.data.checkResult);\n                  }\n                );\n              }}\n            >\n              <Icon name=\"arrow up\" color=\"black\" />\n              提交答案\n            </Button>\n          </div>\n\n          <Segment>\n            <Message.Header style={{ \"textAlign\": \"center\" }}>提交结果</Message.Header>\n            {(checkResult !== 2) ? <Message success={checkResult} negative={!checkResult}>\n              {checkResult ?\n                (<><span>正确</span><Icon name=\"check circle\" color=\"green\" size=\"large\" /></>) :\n                <><span>错误</span><Icon name=\"times circle\" color=\"red\" size=\"large\" /></>}\n            </Message> : <Message>\n              <><Icon name=\"wait\" color=\"blue\" size=\"large\" /><span>等待提交</span></>\n            </Message>}\n          </Segment>\n        </div>\n\n      </div>) : (<div>waiting ...</div>)}\n      <Divider />\n      <div>\n        {/* <Form style={{\n          marginTop: \"20px\",\n        }}>\n          <List relaxed>\n            {\n              chatRecord.map((record) => {\n                let floatedValue;\n                if (record.role === \"user\") {\n                  floatedValue = \"left\";\n                } else {\n                  floatedValue = \"right\";\n                }\n                return (\n                  <ListItem>\n                    <ListContent floated={floatedValue}>\n                      <ListDescription as='a'>{record.content}</ListDescription>\n                    </ListContent>\n                  </ListItem>\n                );\n              })\n            }\n          </List>\n          <TextArea\n            placeholder='请输入想询问的问题'\n            style={{ minHeight: 40 }}\n            value={currentUserInput}\n            onChange={(e, { value }) => {\n              setCurrentUserInput(value);\n            }}\n          />\n          <Button\n            icon\n            labelPosition=\"right\"\n            color=\"green\"\n            onClick={() => {\n              // submitSingleChoiceExerciseAnswer(localStorage.getItem(\"token\"), exerciseId, String.fromCharCode(65 + selectedValue)).then(\n              //   (res) => {\n              //     setCheckResult(res.data.data.checkResult);\n              //   }\n              // );\n              const userChat = {\n                \"role\": \"user\",\n                \"content\": currentUserInput\n              }\n              setChatRecord([...chatRecord, userChat]);\n              setCurrentUserInput(\"\");\n            }}\n            style={{\n              marginTop: \"10px\",\n            }}\n            floated=\"right\"\n          >\n            <Icon name=\"arrow up\" color=\"black\" />\n            询问大语言模型\n          </Button>\n        </Form> */}\n      </div>\n    </div>\n  );\n}\n\n\nexport default SingleChoiceExercise;","// @ts-nocheck\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Input, Button, Segment, Message, Icon } from 'semantic-ui-react';\n\n\nimport { requireFillInExerciseOneById, submitFillInExerciseAnswer } from '../utils/ajax/exercise';\n\nimport \"./Exercise/Exercise.css\";\nimport { exerciseContentObject } from './JavaProgramExercise';\n\nimport { CodeDisplay, TextDisplay } from './Exercise/components';\n\nimport { setFooter } from '../redux/reducers/global';\n\ninterface fillInCorrectAnswer {\n  [key: string]: string;\n}\n\ninterface exerciseObject {\n  exerciseContents: exerciseContentObject[],\n  correctAnswer: fillInCorrectAnswer\n}\n\nconst FillInExercise = (): JSX.Element => {\n  const navigate = useNavigate();\n  let token: string;\n  if (localStorage.getItem(\"token\") !== null) {\n    token = localStorage.getItem(\"token\") as string;\n  } else {\n    navigate(\"/login\");\n  }\n\n  // const dispatch = useDispatch();\n  // dispatch(setFooter(false));\n\n  const { exerciseId } = useParams();\n\n  const [exercise, setExercise] = useState<exerciseObject | null>(null);\n  const [correctAnswerKeys, setCorrectAnswerKeys] = useState<fillInCorrectAnswer | null>(null);\n  const [currentAnswer, setCurrentAnswer] = useState<fillInCorrectAnswer | null>(null);\n  const [checkResult, setCheckResult] = useState<int>(2);\n\n  useEffect(() => {\n    requireFillInExerciseOneById(token, exerciseId).then((res) => {\n      setExercise(res.data.data.exercise);\n      setCorrectAnswerKeys(Object.keys(res.data.data.exercise.correctAnswer));\n      const emptyAnswer = {};\n      for (let k in res.data.data.exercise.correctAnswer) {\n        emptyAnswer[k] = \"\";\n      }\n      setCurrentAnswer(emptyAnswer);\n    })\n  }, []);\n\n  return (\n    <div className='exercise-page'>\n      {(Boolean(exercise) && Boolean(correctAnswerKeys) && Boolean(currentAnswer)) ? (<div className='exercise-answer-box'>\n        <div className=\"exercise-display-box\">\n          <div className=\"exercise-contents-box\">\n            {exercise?.exercise.exerciseContents.map((exerciseContent, index) => {\n              let returnContent;\n              switch (exerciseContent.contentType) {\n                case \"TEXT\":\n                  returnContent = <TextDisplay key={index} english={exerciseContent.english} chinese={exerciseContent.chinese} />\n                  break;\n                case \"IMAGE\":\n                  returnContent = <div className=\"display-image\" key={index}>\n                    <img src={\"/\" + exerciseContent.imageName} alt=\"requesting ...\" />\n                  </div>\n                  break;\n                case \"VIDEO\":\n                  returnContent = <div className=\"display-video\"></div>\n                  break;\n                case \"CODE\":\n                  returnContent = <CodeDisplay key={index} content={exerciseContent.code} />\n                  break;\n              }\n              return returnContent\n            })}\n          </div>\n        </div>\n\n        <div className='fillInBody'>\n          {\n            correctAnswerKeys.map((k) => {\n              return <Input\n                className='fillInOneEmpty'\n                key={k}\n                placeholder={\"请填入第\" + (parseInt(k, 10) + 1) + \"个空的内容\"}\n                value={currentAnswer[k]}\n                onChange={(e, { value }) => {\n                  const changedAnswer = {};\n                  for (let k_ in currentAnswer) {\n                    changedAnswer[k_] = currentAnswer[k_];\n                  }\n                  changedAnswer[k] = value;\n                  setCurrentAnswer(changedAnswer);\n                }}\n              />\n            })\n          }\n        </div>\n\n        <div style={{\n          marginTop: \"5px\",\n          width: \"450px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}>\n          <div>\n            <Button\n              icon\n              labelPosition=\"right\"\n              color=\"green\"\n              onClick={() => {\n                submitFillInExerciseAnswer(localStorage.getItem(\"token\"), exerciseId, currentAnswer).then(\n                  (res) => {\n                    setCheckResult(res.data.data.checkResult);\n                  }\n                );\n              }}\n            >\n              <Icon name=\"arrow up\" color=\"black\" />\n              提交\n            </Button>\n          </div>\n\n          <Segment>\n            <Message.Header style={{ \"textAlign\": \"center\" }}>提交结果</Message.Header>\n            {(checkResult !== 2) ? <Message success={checkResult} negative={!checkResult}>\n              {checkResult ?\n                (<><span>正确</span><Icon name=\"check circle\" color=\"green\" size=\"large\" /></>) :\n                <><span>错误</span><Icon name=\"times circle\" color=\"red\" size=\"large\" /></>}\n            </Message> : <Message>\n              <><Icon name=\"wait\" color=\"blue\" size=\"large\" /><span>等待提交</span></>\n            </Message>}\n          </Segment>\n        </div>\n\n      </div>) : (<div>waiting ...</div>)}\n\n    </div>\n  );\n}\n\n\nexport default FillInExercise;","import React from 'react';\n\ninterface LinkProps {\n\tchildren?: React.ReactNode;\n\tclassName?: string;\n\texternal?: boolean;\n\tsameTab?: boolean;\n\tstate?: Record<string, unknown>;\n\tto: string;\n\tonClick?: () => void;\n}\n\nconst Link = ({\n\tchildren,\n\tto,\n\texternal,\n\tsameTab,\n\t...other\n}: LinkProps): JSX.Element => {\n\tif (!external && /^\\/(?!\\/)/.test(to)) {\n\t\t// 内部链接，以/开头并且只出现一个/\n\t\t// return (\n\t\t// \t<GatsbyLink to={to} {...other}>\n    //     {children}\n    //   </GatsbyLink>\n\t\t// );\n\t} else if (sameTab && external) {\n\t\treturn (\n\t\t\t<a href={to} {...other}>\n\t\t\t\t{children}\n\t\t\t</a>\n\t\t);\n\t}\n\n\treturn (\n\t\t<a href={to} {...other} rel='noopener noreferrer' target='_blank'>\n\t\t\t{children}\n\t\t</a>\n\t);\n};\n\nexport default Link;","import React from 'react';\n\nimport styles from './skeletonStyles';\n\nconst SkeletonSprite = (): JSX.Element => {\n  return (\n    <div className='sprite-container'>\n      <style dangerouslySetInnerHTML={{ __html: styles }} />\n      <svg className='sprite-svg'>\n        <rect\n          className='sprite'\n          fill='var(--gray-75)'\n          height='100%'\n          stroke='var(--gray-75)'\n          width='2px'\n          x='0'\n          y='0'\n        />\n      </svg>\n    </div>\n  );\n}\n\nSkeletonSprite.displayName = 'SkeletonSprite';\n\nexport default SkeletonSprite;\n","const styles = `\n\n.sprite-container {\n  height: 100%;\n  width: 100%;\n}\n\n.sprite-svg {\n  height: 100%;\n  width: 100%;\n  background: var(--theme-color);\n\n}\n\n@-webkit-keyframes shimmer{\n  0% {\n    -webkit-transform: translateX(0%);\n    transform: translateX(0%);\n    stroke-width: 2px;\n  }\n  5%{\n   opacity:100%;\n  }\n  35% {\n    stroke-width: 30px;\n    opacity:100%;\n  }\n  65%{\n    opacity:100%;\n  }\n  100% {\n    -webkit-transform: translateX(100%);\n    transform: translateX(100%);\n    stroke-width: 2px;\n  }\n}\n\n@keyframes shimmer{\n  0% {\n    -webkit-transform: translateX(0%);\n    transform: translateX(0%);\n    stroke-width: 2px;\n  }\n  35% {\n    stroke-width: 30px;\n    opacity:100%;\n  }\n  65%{\n    opacity:100%;\n  }\n  100% {\n    -webkit-transform: translateX(100%);\n    transform: translateX(100%);\n    stroke-width: 2px;\n  }\n}\n\n.sprite {\n  opacity:0%;\n  -webkit-animation-name: shimmer;\n  animation-name: shimmer;\n  animation-delay: 1s;\n  width: 2px;\n  -webkit-animation-duration: 2s;\n  animation-duration: 2s;\n  -webkit-animation-timing-function: ease-in-out;\n  animation-timing-function: ease-in-out;\n  -webkit-animation-iteration-count: infinite;\n  animation-iteration-count: infinite;\n  -webkit-animation-direction: normal;\n  animation-direction: normal;\n}\n`;\n\nexport default styles;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n// import AuthOrProfile from './auth-or-profile';\n\nexport interface MenuButtonProps {\n  className?: string;\n  displayMenu?: boolean;\n  innerRef?: React.RefObject<HTMLButtonElement>;\n  onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined;\n  user?: Record<string, unknown>;\n}\n\nconst MenuButton = ({\n  displayMenu,\n  innerRef,\n  onClick,\n  user\n}: MenuButtonProps): JSX.Element => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <button\n        aria-expanded={displayMenu}\n        className={\n          'toggle-button-nav' + (displayMenu ? ' reverse-toggle-color' : '')\n        }\n        onClick={onClick}\n        ref={innerRef}\n      >\n        {t('buttons.menu')}\n      </button>\n      <span className='navatar'>\n        {/* <AuthOrProfile user={user} /> */}\n      </span>\n    </>\n  );\n};\n\nMenuButton.displayName = 'MenuButton';\n\nexport default MenuButton;\n","const createLanguageRedirect = ({\n  clientLocale,\n  lang\n}: {\n  clientLocale: string;\n  lang: string;\n}): string => {\n  // return early if requesting the same page\n  if (clientLocale === lang) return window?.location.toString();\n\n  const pathArray = window?.location?.pathname?.split('/');\n  const path = pathArray\n    .filter(item => (item !== clientLocale && item !== lang ? item : ''))\n    .join('/');\n\n  const hostTail = window?.location?.host.split('.').slice(1).join('.');\n  const nextClient = lang !== 'chinese' ? 'www' : 'chinese';\n  const nextLocation = `${window?.location?.protocol}//${nextClient}.${hostTail}`;\n\n  if (lang === 'english' || lang === 'chinese')\n    return `${nextLocation}/${path}`;\n\n  return `${nextLocation}/${lang}/${path}`;\n};\n\nexport default createLanguageRedirect;\n","// @ts-nocheck\n\nimport React, { Fragment } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport envData from '../../../config/env.json';\nimport {\n  availableLangs,\n  langDisplayNames\n} from '../../../config/i18n/all-langs';\nimport { Link } from '../../helpers';\nimport createLanguageRedirect from '../../create-language-redirect';\n\nconst { clientLocale, radioLocation, apiLocation } = envData;\nconst locales = availableLangs.client;\n\nexport interface NavLinksProps {\n  displayMenu?: boolean;\n  fetchState?: { pending: boolean };\n  toggleDisplayMenu?: React.MouseEventHandler<HTMLButtonElement>;\n  user?: Record<string, unknown>;\n  navigate?: (location: string) => void;\n}\n\nconst NavLinks = ({\n  displayMenu,\n  fetchState,\n  toggleDisplayMenu,\n  user,\n  navigate\n}: NavLinksProps): JSX.Element => {\n  const { t } = useTranslation();\n  const { pending } = fetchState;\n  const { isDonating, username } = user;\n\n\n  return pending ? (\n    <div className='nav-skeleton' />\n  ) : (\n    <div className={'nav-list' + (displayMenu ? ' display-menu' : '')}>\n\n      {\n      // isDonating ? (\n      //   <div className='nav-link nav-link-flex nav-link-header' key='donate'>\n      //     <span>{t('donate.thanks')}</span>\n      //     {/* <FontAwesomeIcon icon={faHeart} /> */}\n      //   </div>\n      // ) : (\n      //   <Link className='nav-link' key='donate' sameTab={false} to='/donate'>\n      //     {t('buttons.donate')}\n      //   </Link>\n      // )\n      }\n\n      {!username && (\n        <a\n          className='nav-link nav-link-sign-in'\n          href={`${apiLocation}/signin`}\n          key='signin'\n        >\n          {t('buttons.sign-in')}\n        </a>\n      )}\n      <Link className='nav-link' key='learn' to='/learn'>\n        {t('buttons.curriculum')}\n      </Link>\n      {username && (\n        <Fragment key='profile-settings'>\n          <Link\n            className='nav-link'\n            key='profile'\n            sameTab={false}\n            to={`/${username}`}\n          >\n            {t('buttons.profile')}\n          </Link>\n          <Link\n            className='nav-link'\n            key='settings'\n            sameTab={false}\n            to={`/settings`}\n          >\n            {t('buttons.settings')}\n          </Link>\n        </Fragment>\n      )}\n      <hr className='nav-line' />\n      <Link\n        className='nav-link nav-link-flex'\n        external={true}\n        key='forum'\n        sameTab={false}\n        to={t('links:nav.forum')}\n      >\n        <span>{t('buttons.forum')}</span>\n        {/* <FontAwesomeIcon icon={faExternalLinkAlt} /> */}\n      </Link>\n      <hr className='nav-line' />\n      <div className='nav-link nav-link-header' key='lang-header'>\n        {t('footer.language')}\n      </div>\n      <div className='nav-link dropdown-nav-link' key='language-dropdown'>\n        <select\n          className='nav-link-lang-dropdown'\n          onChange={(\n            event: React.ChangeEvent<HTMLSelectElement>\n          ): void => {\n            toggleDisplayMenu();\n\n            const path = createLanguageRedirect({\n              clientLocale,\n              lang: event.target.value\n            });\n\n            return navigate(path);\n          }}\n          value={clientLocale}\n        >\n          {locales.map(lang => (\n            <option key={'lang-' + lang} value={lang}>\n              {langDisplayNames[lang]}\n            </option>\n          ))}\n        </select>\n      </div>\n      {username && (\n        <Fragment key='signout-frag'>\n          <hr className='nav-line-2' />\n          <a\n            className='nav-link'\n            href={`${apiLocation}/signout`}\n            key='sign-out'\n          >\n            {t('buttons.sign-out')}\n          </a>\n        </Fragment>\n      )}\n    </div>\n  );\n}\n\nNavLinks.displayName = 'NavLinks';\n\nexport default NavLinks;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppDispatch, RootState } from \"../store\";\n\nconst userSlicer = createSlice({\n  name: 'user',\n  initialState: {\n    name: \"\",\n    login: false\n  },\n  reducers: {\n    setName: (state, action) => {\n      state.name = action.payload;\n    },\n    login: (state) => {\n      state.login = true;\n    }\n  }\n});\n\n// 返回更新 state 的 Action\nexport const { setName, login } = userSlicer.actions;\n\n// Selector，作为 useSelector 读取数据的函数参数\nexport const userSelector = (state: RootState) => {\n  return {\n    \"name\": state.user.name,\n    \"login\": state.user.login\n  }\n};\n\nexport default userSlicer.reducer;","// @ts-nocheck\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RLink } from \"react-router-dom\";\n\nimport './Universal-Nav.css';\n\nimport { Link, SkeletonSprite } from '../../helpers';\nimport MenuButton from './MenuButton';\nimport NavLinks from './NavLinks';\nimport { login, userSelector } from '../../../redux/reducers/user';\n\nexport interface UniversalNavProps {\n\tdisplayMenu?: boolean;\n\tfetchState?: { pending: boolean };\n\tmenuButtonRef?: React.RefObject<unknown> | React.Ref<HTMLButtonElement> | undefined;\n\ttoggleDisplayMenu?: React.MouseEventHandler<HTMLButtonElement> | undefined;\n\tuser?: Record<string, unknown>;\n}\n\n\nexport const UniversalNav = ({\n\tdisplayMenu,\n\ttoggleDisplayMenu,\n\tmenuButtonRef,\n\tuser,\n\tfetchState\n}: UniversalNavProps): JSX.Element => {\n\tconst pending: boolean = false;\n\tconst { t } = useTranslation();\n\tconst { login } = useSelector(userSelector);\n\tconst dispatch = useDispatch();\n\n\treturn (<nav\n\t\taria-label={t('aria.primary-nav')}\n\t\tclassName={'universal-nav' + (displayMenu ? ' expand-nav' : '')}\n\t\tid='universal-nav'\n\t>\n\t\t<div className='universal-nav-middle'>\n\t\t\t<Link to='/learn' style={{ \"color\": \"white\", \"fontSize\": \"22px\", \"marginLeft\": \"20px\" }}>\n\t\t\t\tUSTC\n\t\t\t</Link>\n\t\t</div>\n\t\t<div className='universal-nav-right main-nav'>\n\t\t\t{pending ? (\n\t\t\t\t<div className='nav-skeleton'>\n\t\t\t\t\t<SkeletonSprite />\n\t\t\t\t</div>\n\t\t\t) : (login ? (\n\t\t\t\t<MenuButton\n\t\t\t\t\tdisplayMenu={displayMenu}\n\t\t\t\t\tinnerRef={menuButtonRef}\n\t\t\t\t\tonClick={toggleDisplayMenu}\n\t\t\t\t\tuser={user}\n\t\t\t\t/>\n\t\t\t) : (\n\n\t\t\t\t<RLink to=\"/login\" className='signin'>{t('buttons.sign-in')}</RLink>\n\n\t\t\t))}\n\t\t</div>\n\n\t\t<NavLinks\n\t\t\tdisplayMenu={displayMenu}\n\t\t\tfetchState={fetchState}\n\t\t\ttoggleDisplayMenu={toggleDisplayMenu}\n\t\t\tuser={user}\n\t\t/>\n\t</nav>);\n}\n\n\nUniversalNav.displayName = 'UniversalNav';\nexport default UniversalNav;","// @ts-nocheck\n\nimport React, { useState, useEffect, useRef } from 'react';\n\nimport UniversalNav from './components/UniversalNav';\n\nimport './Header.css';\n\nexport interface HeaderProps {\n\tfetchState: { pending: boolean };\n\tuser: Record<string, any>;\n}\n\n\nexport const Header = ({ fetchState, user }: HeaderProps): JSX.Element => {\n\tconst menuButtonRef = useRef();\n\tconst [displayMenu, setDisplayMenu] = useState(false);\n\tconst clickOutsideEventListener = (event) => handleClickOutside(event, displayMenu);\n\n\t// 切换菜单栏的显示状态\n\tconst toggleDisplayMenu = () => {\n\t\t// 另一种方法：参数是最新的状态，不会等渲染完这个状态就会更新\n\t\t// setDisplayMenu((preState) => { return !preState;})\n\t\tsetDisplayMenu(!displayMenu);\n\t}\n\n\t// 当点击搜索框和菜单栏以外的地方时，隐藏菜单栏和搜索框\n\tconst handleClickOutside = (event: globalThis.MouseEvent): void => {\n\t\tif (\n\t\t\tdisplayMenu &&\n\t\t\t// menuButtonRef.current 指向菜单按钮对应的dom对象\n\t\t\tmenuButtonRef.current &&\n\t\t\t// 如果点击的不是菜单按钮\n\t\t\t!menuButtonRef.current.contains(event.target) &&\n\t\t\t!(event.target instanceof HTMLSelectElement)\n\t\t) {\n\t\t\ttoggleDisplayMenu();\n\t\t}\n\t}\n\n\t// 对应componentDidMount\n\tuseEffect(() => {\n\t\tdocument.addEventListener('click',  clickOutsideEventListener);\n\t}, []);  // eslint-disable-line react-hooks/exhaustive-deps\n\n\t// 对应componentWillUnmount\n\tuseEffect(() => {\n\t\t// 返回一个函数，这个函数会在组件卸载前被调用\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('click', clickOutsideEventListener);\n\t\t}\n\t}, []);  // eslint-disable-line react-hooks/exhaustive-deps\n\n\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<UniversalNav\n\t\t\t\t\tdisplayMenu={displayMenu}\n\t\t\t\t\tfetchState={fetchState}\n\t\t\t\t\tmenuButtonRef={menuButtonRef}\n\t\t\t\t\ttoggleDisplayMenu={toggleDisplayMenu}\n\t\t\t\t\tuser={user}\n\t\t\t\t/>\n\t\t\t</header>\n\t\t</>\n\t);\n}\n\nHeader.displayName = 'Header';\n\nexport default Header;","import React from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link } from '../helpers';\nimport './Footer.css';\n\nconst Footer = (): JSX.Element => {\n  const { t } = useTranslation();\n\n  return (\n    <footer className='site-footer'>\n      <div className='footer-container'>\n        {/* <div className='footer-top'>\n          <div className='footer-desc-col'>\n            <p>{t('footer.tax-exempt-status')}</p>\n            <p>{t('footer.mission-statement')}</p>\n            <p>{t('footer.donation-initiatives')}</p>\n            <p className='footer-donation'>\n              <Trans i18nKey='footer.donate-text'>\n                You can\n                <Link className='inline' to='/donate'>\n                  make a tax-deductible donation here\n                </Link>\n                .\n              </Trans>\n            </p>\n          </div>\n          <div className='trending-guides'>\n            <div className='col-header'>{t('footer.trending-guides')}</div>\n            <div className='trending-guides-row'>\n              <div className='footer-col footer-col-1'>\n                <Link external={false} to={t('trending:article0link')}>\n                  {t('trending:article0title')}\n                </Link>\n                <Link external={false} to={t('trending:article1link')}>\n                  {t('trending:article1title')}\n                </Link>\n              </div>\n              <div className='footer-col footer-col-2'>\n                <Link external={false} to={t('trending:article10link')}>\n                  {t('trending:article10title')}\n                </Link>\n                <Link external={false} to={t('trending:article11link')}>\n                  {t('trending:article11title')}\n                </Link>\n              </div>\n              <div className='footer-col footer-col-3'>\n                <div className='footer-left'>\n                  <Link external={false} to={t('trending:article20link')}>\n                    {t('trending:article20title')}\n                  </Link>\n\n                </div>\n\n                <div className='footer-right'>\n                  <Link external={false} to={t('trending:article25link')}>\n                    {t('trending:article25title')}\n                  </Link>\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> */}\n        <div className='footer-bottom'>\n          <div className='col-header'>{t('footer.our-nonprofit')}</div>\n          <div className='footer-divder' />\n          <div className='our-nonprofit'>\n            <Link external={false} to={t('links:footer.about-url')}>\n              {t('footer.links.about')}\n            </Link>\n            <Link external={false} to={'https://github.com/freeCodeCamp/'}>\n              {t('footer.links.open-source')}\n            </Link>\n            {/* <Link external={false} to={t('links:footer.about-url')}>\n              {t('footer.links.about')}\n            </Link>\n            <Link\n              external={false}\n              sameTab={false}\n              to={'https://www.linkedin.com/school/free-code-camp/people/'}\n            >\n              {t('footer.links.alumni')}\n            </Link>\n            <Link external={false} to={'https://github.com/freeCodeCamp/'}>\n              {t('footer.links.open-source')}\n            </Link>\n            <Link\n              external={false}\n              sameTab={false}\n              to={t('links:footer.shop-url')}\n            >\n              {t('footer.links.shop')}\n            </Link>\n            <Link external={false} to={t('links:footer.support-url')}>\n              {t('footer.links.support')}\n            </Link>\n            <Link external={false} to={t('links:footer.sponsors-url')}>\n              {t('footer.links.sponsors')}\n            </Link>\n            <Link external={false} to={t('links:footer.honesty-url')}>\n              {t('footer.links.honesty')}\n            </Link>\n            <Link external={false} to={t('links:footer.coc-url')}>\n              {t('footer.links.coc')}\n            </Link>\n            <Link external={false} to={t('links:footer.privacy-url')}>\n              {t('footer.links.privacy')}\n            </Link>\n            <Link external={false} to={t('links:footer.tos-url')}>\n              {t('footer.links.tos')}\n            </Link>\n            <Link external={false} to={t('links:footer.copyright-url')}>\n              {t('footer.links.copyright')}\n            </Link> */}\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nFooter.displayName = 'Footer';\nexport default Footer;\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nimport { useSelector, useDispatch } from 'react-redux';\n\n\n\nimport './App.css';\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport { Login, SignUp, Home, JavaProgramExercise, SingleChoiceExercise, FillInExercise} from './pages';\n\nimport Header from \"./components/Header\";\nimport Footer from './components/Footer';\nimport \"./components/layouts/variables.css\";\nimport { setName, userSelector } from './redux/reducers/user';\nimport { globalSelector } from './redux/reducers/global';\n\nconst App = () => {\n  const { name } = useSelector(userSelector);\n  const { hasFooter } = useSelector(globalSelector);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header fetchState={{ \"pending\": false }} user={{ \"username\": \"dream\", \"isDonating\": false }} />\n        <main>\n          <Routes>\n            <Route path=\"/\">\n              <Route path=\"login\" element={<Login />}></Route>\n              <Route path=\"sign-up\" element={<SignUp />}></Route>\n              <Route path=\"home\" element={<Home />}></Route>\n              <Route path=\"javaProgramExercise/:exerciseId\" element={<JavaProgramExercise/>}></Route>\n              <Route path=\"singleChoiceExercise/:exerciseId\" element={<SingleChoiceExercise/>}></Route>\n              <Route path=\"fillInExercise/:exerciseId\" element={<FillInExercise/>}></Route>\n            </Route>\n          </Routes>\n          {/* <Link to=\"/student/dream/exercise/524223040\" className='button'><Button color=\"green\"  style={{\"marginTop\": \"100px\"}}>做题界面</Button></Link> */}\n          \n          {/* <div>\n            <button onClick={() => {\n              if (name === \"\") {\n                dispatch(setName(\"dream\"));\n              } else {\n                dispatch(setName(\"\"));\n              }\n            }}>\n              {name === \"\" ? \"登入\" : \"退出\"}\n            </button>\n            用户：{name}\n          </div> */}\n\n        </main>\n\n        {hasFooter && <Footer />}\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AppDispatch, RootState } from \"../store\";\n\n// 借助 createSlice 创建 reducer、action\nconst CounterSlice = createSlice({\n    // 生成 Action type 的前缀，例如：counter/increment\n    name: \"counter\",\n    initialState: {\n        value: 0,\n    },\n    reducers: {\n        increment: (state) => {\n            // 这里默认通过了 immer 处理，不会修改原 state\n            state.value += 1;\n        },\n        decrement: (state) => {\n            state.value -= 1;\n        },\n        incrementByAmount: (state, action: PayloadAction<number>) => {\n            state.value += action.payload;\n        },\n        decrementByAmount: (state, action: PayloadAction<number>) => {\n            state.value -= action.payload;\n        },\n    },\n});\n\n\n// Action Creator 用于执行返回描述如何更新 state 的 Action\nexport const { increment, decrement, incrementByAmount, decrementByAmount } =\n    CounterSlice.actions;\n\n\n// 异步 thunk，用于需要在更新数据前异步处理数据的情况\nexport const incrementAsync = (amount: number) => (dispatch: AppDispatch) => {\n    setTimeout(() => {\n        dispatch(incrementByAmount(amount));\n    }, 1500);\n};\n\n\n// Selector，作为 useSelector 读取数据的函数参数\nexport const counterSelector = (state: RootState) => state.counter.value;\n\n\n// Reducer，真正执行修改 state 的纯函数\nexport default CounterSlice.reducer;","import {combineReducers} from '@reduxjs/toolkit';\n\nimport counterSlice from './counter' ;\nimport userSlice from './user';\nimport globalSlice from \"./global\";\n\nexport const defaultFetchState = {\n  pending: true,\n  complete: false,\n  errored: false,\n  error: null\n};\n\nconst rootReducers = combineReducers({\n  counter: counterSlice ,\n  user: userSlice,\n  global:  globalSlice\n});\n\n\nexport default rootReducers;","import { configureStore } from '@reduxjs/toolkit';\n// 引入 reducer 的集合\nimport rootReducers from \"./reducers\"; \n\nconst store = configureStore({\n    reducer: rootReducers,\n});\n\n// 导出 Store 中的状态（state）类型\nexport type RootState = ReturnType<typeof store.getState>;\n\n// 导出更改状态的 Dispatch 方法类型\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;","/* global preval */\n\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nconst envData = require('../config/env.json');\nconst { i18nextCodes } = require('../config/i18n/all-langs');\n\nconst { clientLocale } = envData;\n\n\n// 'en'\nconst i18nextCode = i18nextCodes[clientLocale];\n\ni18n.use(initReactI18next).init({\n  fallbackLng: 'en',\n  lng: i18nextCode,\n  // we only load one language since each language will have it's own server\n  // They need to be evaluated ahead of time, to prevent Webpack from bundling\n  // the entire locales directory. To avoid double imports when the locale is\n  // english, we simply export nothing from the preval\n  resources: {\n    [i18nextCode]: {\n      translations: `\n      const envData = require('../config/env.json');\n      const { clientLocale } = envData;\n      if (clientLocale !== 'chinese') {\n        module.exports = require('./locales/' + clientLocale + '/translations.json');\n      } \n    `,\n      trending: `\n      const envData = require('../config/env.json');\n      const { clientLocale } = envData;\n      if (clientLocale !== 'chinese') {\n        module.exports = require('./locales/' + clientLocale + '/trending.json');\n      }\n    `,\n      intro: `\n      const envData = require('../config/env.json');\n      const { clientLocale } = envData;\n      if (clientLocale !== 'chinese') {\n        module.exports = require('./locales/' + clientLocale + '/intro.json');\n      }\n    `,\n      metaTags: `\n      const envData = require('../config/env.json');\n      const { clientLocale } = envData;\n      if (clientLocale !== 'chinese') {\n        module.exports = require('./locales/' + clientLocale + '/meta-tags.json');\n      }\n    `,\n      links: `\n      const envData = require('../config/env.json');\n      const { clientLocale } = envData;\n      if (clientLocale !== 'chinese') {\n        module.exports = require('./locales/' + clientLocale + '/links.json');\n      }\n    `\n    },\n    en: {\n      // translations: preval`module.exports = require('./locales/english/translations.json')`,\n      // trending: preval`module.exports = require('./locales/english/trending.json')`,\n      // intro: preval`module.exports = require('./locales/english/intro.json')`,\n      // metaTags: preval`module.exports = require('./locales/english/meta-tags.json')`,\n      // links: preval`module.exports = require('./locales/english/links.json')`\n\n\n      translations: require('./locales/chinese/translations.json'),\n      trending: require('./locales/chinese/trending.json'),\n      intro: require('./locales/chinese/intro.json'),\n      metaTags: require('./locales/chinese/meta-tags.json'),\n      links: require('./locales/chinese/links.json')\n    }\n  },\n  ns: ['translations', 'trending', 'intro', 'metaTags', 'links'],\n  defaultNS: 'translations',\n  returnObjects: true,\n  // Uncomment the next line for debug logging\n  // debug: true,\n  interpolation: {\n    escapeValue: false\n  },\n  react: {\n    useSuspense: true\n  }\n});\n\ni18n.languages = clientLocale;\n\nexport default i18n;\n","import React from 'react';\n// import ReactDOM from 'react-dom';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\n\nimport store from './redux/store';\nimport \"./i18n/config\";\n\n\n\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Provider store={store}>\n//       <App/>\n//     </Provider>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}